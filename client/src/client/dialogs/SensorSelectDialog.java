/*
 * Copyright (C) 2010 Aday Talavera Hierro <aday.talavera@gmail.com>
 *
 * This file is part of JASEIMOV.
 *
 * JASEIMOV is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * JASEIMOV is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with JASEIMOV.  If not, see <http://www.gnu.org/licenses/>.
 */
package client.dialogs;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.DefaultListModel;

/**
 * A JDialog to choose Objects from a list.
 * @author Aday Talavera Hierro <aday.talavera@gmail.com>
 */
public class SensorSelectDialog extends javax.swing.JDialog implements ActionListener
{
    private DefaultListModel sensorListModel;
    private DefaultListModel selectedListModel;    

    /**
     * Creates a SensorSelectDialog.
     * @param parent The frame that contains this dialog.
     * @param sensors A list of devices to be elected.
     */
    public SensorSelectDialog(java.awt.Frame parent, Object[] sensors)
    {
        super(parent, true);
        initComponents();

        // Init gui buttons
        addButton.addActionListener(this);        
        clearButton.addActionListener(this);
        removeButton.addActionListener(this);
        finishButton.addActionListener(this);

        // Init list models
        sensorListModel = new DefaultListModel();
        if(sensors != null)
        {
            for(Object sensor : sensors)
            {
                sensorListModel.addElement(sensor);
            }
        }
        sensorList.setModel(sensorListModel);
        sensorList.setFixedCellWidth(200);

        selectedListModel = new DefaultListModel();        
        selectedList.setModel(selectedListModel);
        selectedList.setFixedCellWidth(200);

        this.pack();        
    }

    public void actionPerformed(ActionEvent e)
    {
        Object source = e.getSource();
        if(source.equals(addButton))
        {
            Object obj = sensorList.getSelectedValue();
            if(obj != null)
            {
                selectedListModel.addElement(obj);
                sensorListModel.removeElement(obj);
            }
        }
        else if(source.equals(removeButton))
        {
            Object obj = selectedList.getSelectedValue();
            if(obj != null)
            {
                sensorListModel.addElement(obj);
                selectedListModel.removeElement(obj);
            }
        }
        else if(source.equals(clearButton))
        {
            if(!selectedListModel.isEmpty())
            {
                for(Object obj : selectedListModel.toArray())
                {
                    sensorListModel.addElement(obj);
                }
                selectedListModel.clear();
            }
        }        
        else if(source.equals(finishButton))
        {
            this.setVisible(false);
        }
    }

    /**
     * Returns no selected objects.
     * @return An array of objects.
     */
    public Object[] getSensorObjects()
    {
        return sensorListModel.toArray();
    }

    /**
     * Returns selected objects.
     * @return An array of objects.
     */
    public Object[] getSelectedObjects()
    {
        return selectedListModel.toArray();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.JScrollPane jScrollPane1 = new javax.swing.JScrollPane();
        sensorList = new javax.swing.JList();
        javax.swing.JScrollPane jScrollPane2 = new javax.swing.JScrollPane();
        selectedList = new javax.swing.JList();
        javax.swing.JPanel jPanel1 = new javax.swing.JPanel();
        addButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        javax.swing.JPanel jPanel2 = new javax.swing.JPanel();
        finishButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("client/client"); // NOI18N
        setTitle(bundle.getString("SELECT SENSOR")); // NOI18N
        setResizable(false);

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("AVALAIBLE SENSORS"))); // NOI18N

        sensorList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(sensorList);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.LINE_START);

        jScrollPane2.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("SELECTED SENSORS"))); // NOI18N

        selectedList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(selectedList);

        getContentPane().add(jScrollPane2, java.awt.BorderLayout.LINE_END);

        addButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/client/images/add.png"))); // NOI18N
        addButton.setText(bundle.getString("ADD")); // NOI18N
        addButton.setToolTipText(bundle.getString("ADD TOOLTIP")); // NOI18N

        removeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/client/images/delete.png"))); // NOI18N
        removeButton.setText(bundle.getString("REMOVE")); // NOI18N
        removeButton.setToolTipText(bundle.getString("REMOVE TOOLTIP")); // NOI18N

        clearButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/client/images/page_white.png"))); // NOI18N
        clearButton.setText(bundle.getString("CLEAR")); // NOI18N
        clearButton.setToolTipText(bundle.getString("CLEAR TOOLTIP")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(removeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(clearButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(addButton)
                .addGap(18, 18, 18)
                .addComponent(removeButton)
                .addGap(18, 18, 18)
                .addComponent(clearButton)
                .addGap(97, 97, 97))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        finishButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/client/images/ok.png"))); // NOI18N
        finishButton.setText(bundle.getString("FINISH")); // NOI18N
        jPanel2.add(finishButton);

        getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JButton addButton;
    javax.swing.JButton clearButton;
    javax.swing.JButton finishButton;
    javax.swing.JButton removeButton;
    javax.swing.JList selectedList;
    javax.swing.JList sensorList;
    // End of variables declaration//GEN-END:variables

}
